# 326. 3的幂 #
## 问题 #
给出一个整数，写一个函数来确定这个数是不是3的一个幂。
后续挑战：
你能不使用循环或者递归完成本题吗？
##递归‘
class Solution {
public:
    bool isPowerOfThree(int n) {
        int i=0;
        if(n==0||n==2)
            return false;
        if(n==1)
            return true;
        while(n!=3&&i==0)
        {
            i=n%3;
            n=n/3;
        }
        if(i==0)
            return true;
        else 
            return false;
    }
}
’
##对数
‘class Solution {
public:
    bool isPowerOfThree(int n) {
        if(log10(n)/log10(3)-int(log10(n)/log10(3))==0)
            return true;
        else return false;
    }
};’
##分析
一开始用了递归的思路，因为想不到别的。如果一直除下去除出是3，就认为这个数是3的幂。漏考虑了n小于3的情况，总是输出错误。
上网查了另外一种思路是取对数然后判断是否为整数，重新写了一次。
用这个代码当输入时4782968的时候总是报错，最后认为可能是浮点数精确度不够，就把变量去掉直接放式子。
‘class Solution {
public:
    bool isPowerOfThree(int n) {
        float a;
        a=log10(n)/log10(3);
        if(a-(int)a==0)
            return true;
        else return false;
    }
};’
